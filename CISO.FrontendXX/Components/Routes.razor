@using System.Reflection
@using STZ.Frontend.Components

<STZLocalizationProvider>
    <Router AppAssembly="typeof(Program).Assembly"
            AdditionalAssemblies="@GetAssembliesWithRazorPages()">
        <Found Context="routeData">
            <RouteView RouteData="routeData" DefaultLayout="typeof(Layout.MainLayout)"/>
            <FocusOnNavigate RouteData="routeData" Selector="h1"/>
        </Found>
        <NotFound>
            <LayoutView Layout="@typeof(Layout.MainLayout)">
                <p>Página no encontrada</p>
            </LayoutView>
        </NotFound>
    </Router>
</STZLocalizationProvider>

@code {
    private Assembly[] GetAssembliesWithRazorPages()
    {
        // Cargar dinámicamente los ensamblados .dll del directorio base si no están ya cargados
        var loadedAssemblies = AppDomain.CurrentDomain.GetAssemblies()
            .Select(a => a.GetName().Name)
            .ToHashSet();

        var assemblyFiles = Directory.GetFiles(AppContext.BaseDirectory, "*.dll");

        foreach (var file in assemblyFiles)
        {
            try
            {
                var assemblyName = Path.GetFileNameWithoutExtension(file);
                if (!loadedAssemblies.Contains(assemblyName))
                {
                    Assembly.Load(assemblyName);
                }
            }
            catch
            {
                // Ignorar errores de carga
            }
        }

        // Obtener ensamblados con páginas (componentes con @page)
        var assembliesWithRoutes = AppDomain.CurrentDomain.GetAssemblies()
            .Where(asm => !asm.IsDynamic)
            .Where(asm =>
            {
                try
                {
                    return asm.GetTypes().Any(t =>
                        typeof(ComponentBase).IsAssignableFrom(t) &&
                        t.GetCustomAttributes(typeof(RouteAttribute), inherit: true).Any());
                }
                catch
                {
                    return false;
                }
            })
            .ToArray();

        // Imprimir ensamblados detectados
        foreach (var asm in assembliesWithRoutes)
        {
            Console.WriteLine($"[Routes] Ensamblado con páginas detectado: {asm.FullName}");
        }

        return assembliesWithRoutes;
    }
}